---
---

@use 'sass:color';

@import 'normalize';
@import 'color';
@import 'type';

// Not using these values, but these variables must exist anyway so they can be updated by the `width-calc` mixin. Give them reasonable values (rather than null) in case I decide to ditch the complexity of `width-calc`.
$w-20: 20vw;
$w-33: 33.333vw;
$w-50: 50vw;
$w-66: 66.667vw;
$w-80: 80vw;

// Worth it? Requires redeclaring widths every time I want to adjust one for a specific breakpoint
@mixin width-calc($block-gap) {
  // Subtract gap from viewport to get slightly more accurate proportions
  $w-20: calc((100vw - #{$block-gap}) * .2) !global;
  $w-33: calc((100vw - #{$block-gap}) * .33333) !global;
  $w-50: calc((100vw - #{$block-gap}) * .5) !global;
  $w-66: calc((100vw - #{$block-gap}) * .66667) !global;
  $w-80: calc((100vw - #{$block-gap}) * .8) !global;
  
  // Allow for setting of gap per breakpoint  
  .blocks {
    gap: $block-gap;
  }
}

.light {
  body {
    background: $color-dr00-base;
  }
  h1, ul {
    color: $color-dr00-base;
  }
  a:hover {
    color: $color-dr05-orange-700;
  }
  div[class$="-b"] {
    background: $color-dr05-sand;
  }
  .block-02-a {
    background: $color-dr05-blue-700;
  }
  .block-05-a, .block-08-a {
    background: $color-dr05-orange-700;
  }
  .block-04-a, .block-07-a {
    background: $color-dr05-beige;
  }
}

.dark {
  body {
    background: $color-dr05-blue-900;
  }
  h1, ul {
    color: $color-dr00-base;
  }
  a:hover {
    color: $color-dr05-red-700;
  }
  div[class$="-b"] {
    background: $color-dr05-blue-700;
  }
  .block-02-a, .block-05-a, .block-08-a {
    background: $color-dr05-orange-700;
  }
  .block-04-a, .block-07-a {
    background: $color-dr05-sand;
  }
}

body {
  overflow: hidden;
  font-feature-settings: 'kern';
  -webkit-font-smoothing: auto;
  -moz-osx-font-smoothing: auto;
}

h1 {
  display: block;
  font-family: 'Advocate 16 Condensed Bold';
  font-feature-settings: 'case' 1, 'liga' 0;
  font-size: 7rem;
  margin: 0 1rem;
  text-transform: uppercase;
}

ul {
  font-family: 'Equity A Caps';
  font-feature-settings: 'ss10';
  font-size: 1.25rem;
  line-height: 1.5;
  list-style: none;
  margin: 0 .75rem 0 0;
  padding: 0;
}

a {
  color: inherit;
  padding: 0 .25rem;
  text-decoration: none;
  &:hover {
    background: $color-dr05-sand;
  }
}

// Base; tested down to 360px =============================
@include width-calc($block-gap: .3rem);

.blocks {
  display: flex;
  flex-wrap: wrap;
  width: 100%;
}

div[class*="block-"] {
  height: 8rem;
}

div[class$="-b"] {
  flex-grow: 1;
}

.block-01-a, .block-03-a, .block-06-a {
  background: $color-dr05-red-700;
}

.block-01-a {
  width: $w-33;
}

.block-02-a {
  align-content: center;
  display: flex;
  justify-content: flex-end;
  text-align: right;
  width: 100vw;
}

.block-02-b {
  display: none;
}

.block-03-a {
  align-items: center;
  display: flex;
  justify-content: flex-end;
  text-align: right;
  width: $w-80;
}

.block-04-a {
  width: $w-20;
}

.block-05-a {
  width: $w-80;
}

.block-06-a {
  width: $w-50;
}

.block-07-a {
  width: $w-66;
}

.block-08-a {
  width: $w-80;
}

.theme-control {
  background: $color-dr00-base;
  border: 2px solid $color-dr05-blue-700;
  bottom: 1rem;
  display: flex;
  position: absolute;
  left: 1rem;
  button[class*="theme-control-"] {
    background: none;
    border: none;
    margin: 0;
    padding: 0;
    input[type="radio"] {
      display: none;
      &:checked + label {
        background: $color-dr05-blue-700;
        color: $color-dr00-base;
      }
    }
    label {
      color: $color-dr05-blue-700;
      cursor: pointer;
      display: inline-block;
      font-family: 'Equity A Caps';
      font-feature-settings: 'ss10';
      font-size: 1.3rem;
      padding: .7rem;
    }
  }
}
// End base =========================

@media (min-width: 640px) {
  .block-02-a {
    width: $w-80;
  }
  
  .block-02-b {
    display: block;
  }
  
  .block-03-a {
    width: $w-66;
  }
  
  .block-03-b {
    // Set a width sufficient to prevent 04-a from sliding up to row 3
    width: $w-33;
  }
}

@media (min-width: 768px) {
  @include width-calc($block-gap: .75rem);
  
  h1 {
    font-size: 9rem;
    line-height: 9rem;
  }
  
  div[class*="block-"] {
    height: 9rem;
  }
  
  // Must redeclare widths of all A blocks every time I change gap size
  .block-01-a {
    width: $w-33;
  }
  
  .block-02-a {
    width: $w-66;
  }
  
  .block-03-a {
    width: $w-50;
  }
  
  .block-03-b {
    // Set a width sufficient to prevent 04-a from sliding up to row 3
    width: $w-33;
  }
  
  .block-04-a {
    width: $w-20;
  }
  
  .block-05-a {
    width: $w-80;
  }
  
  .block-06-a {
    width: $w-50;
  }
  
  .block-07-a {
    width: $w-66;
  }
  
  .block-08-a {
    width: $w-80;
  }
}

@media (min-width: 1024px) {
  @include width-calc($block-gap: 1rem);
  
  h1 {
    font-size: 10rem;
    line-height: 10rem;
  }
  
  ul {
    font-size: 1.5rem;
    line-height: 1.5;
  }
  
  div[class*="block-"] {
    height: 10rem;
  }
  
  // Must redeclare widths of all A blocks every time I change gap size
  .block-01-a {
    width: $w-33;
  }
  
  .block-04-a {
    width: $w-20;
  }
  
  .block-05-a {
    width: $w-80;
  }

  .block-06-a {
    width: $w-50;
  }

  .block-07-a {
    width: $w-66;
  }

  .block-08-a {
    width: $w-80;
  }

  .theme-control {
    button[class*="theme-control-"] {
      label {
        font-size: 1rem;
        padding: .5rem;
      }
    }
  }
}
